
-----------------------------------------------------------------------------------------------------------------------------------------------------------
--------------- DROP TABLES
--DROP TABLE MARKET_SCAN.DEAL_HISTORY;
--DROP TABLE MARKET_SCAN.SEARCH_HISTORY;
--DROP TABLE MARKET_SCAN.USER_DEAL_ACCOUNT;
--DROP TABLE MARKET_SCAN.DEAL;
--DROP TABLE MARKET_SCAN.REVIEW;
--DROP TABLE MARKET_SCAN.USER;
--DROP TABLE MARKET_SCAN.ROLE;
--DROP TABLE MARKET_SCAN.ITEM;
--DROP TABLE MARKET_SCAN.SUBCATEGORY;
--DROP TABLE MARKET_SCAN.CATEGORY;
--DROP TABLE MARKET_SCAN.CONTACT_DETAIL;
--DROP TABLE MARKET_SCAN.CITY;
--DROP TABLE MARKET_SCAN.STATE;
--DROP TABLE MARKET_SCAN.DEAL_PACKAGE;
--DROP TABLE MARKET_SCAN.BRAND;

-----------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE MARKET_SCAN.STATE (
	ID SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	CODE VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.CITY (
	ID SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	STATE_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.STATE(ID),
	CODE VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.BRAND (
	ID SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	CODE VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.PRODUCT_CATEGORY (
	ID SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	CODE VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.PRODUCT_SUBCATEGORY (
	ID SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	PRODUCT_CATEGORY_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.PRODUCT_CATEGORY(ID),
	CODE VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.PRODUCT (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(150) NOT NULL,
	UNIT VARCHAR(50) NOT NULL,
	PRODUCT_SUBCATEGORY_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.PRODUCT_CATEGORY(ID)
);

CREATE TABLE MARKET_SCAN.BRAND_PRODUCT (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	PRODUCT_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.PRODUCT(ID),
	BRAND_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.BRAND(ID)
);

CREATE TABLE MARKET_SCAN.CITY_BRAND_PRODUCT (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	BRAND_PRODUCT_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.BRAND_PRODUCT(ID),
	CITY_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.CITY(ID)
);

CREATE TABLE MARKET_SCAN.DEAL_PACKAGE (
	ID SMALLSERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	CODE CHAR(10) NOT NULL,
	DEAL_COUNT INTEGER, 
	VALIDITY INTEGER, 
	DEAL_VALIDITY INTEGER
);

CREATE TABLE MARKET_SCAN.DEAL_ACCOUNT (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	DEAL_PACKAGE_ID SMALLSERIAL NOT NULL REFERENCES MARKET_SCAN.DEAL_PACKAGE(ID),
	PURCHASE_DATE DATE NOT NULL,
	AVAILABLE_DEAL_BALANCE SMALLINT NOT NULL,
);

CREATE TABLE MARKET_SCAN.ROLE (
  ID SERIAL PRIMARY KEY NOT NULL,
  NAME CHARACTER VARYING(10) NOT NULL,
  CODE CHAR(1) NOT NULL UNIQUE
);

CREATE TABLE MARKET_SCAN.PERSON (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	FULL_NAME VARCHAR(100) NOT NULL,
	USER_NAME VARCHAR(20) NULL,
	PASSWORD VARCHAR(20) NULL,
  	UUID VARCHAR(50) NULL,
  	MAC_ADDRESS MACADDR NULL,
    IP_ADDRESS INET NULL,
    DEVICE_ID VARCHAR(50) NULL,
    SHOP_NAME VARCHAR(100) NULL,
	MOBILE VARCHAR(10) NULL,
	LANDLINE VARCHAR(20) NULL,
	WHATSAPP VARCHAR(10) NULL,
	EMAIL VARCHAR(150) NOT NULL,
	ADDRESS_LINE1 VARCHAR(150) NOT NULL,
	ADDRESSLINE2 VARCHAR(150) NOT NULL,
	LANDMARK VARCHAR(150) NULL,
	TOWN VARCHAR(100) NULL,
	LOCALITY VARCHAR(100) NULL,
	LONGITUDE VARCHAR(1000) NOT NULL,
	LATTITUDE VARCHAR(100) NOT NULL,   
    LAST_LOGIN_DATE INTEGER UNSIGNED NULL,
    LAST_ACTIVITY INTEGER UNSIGNED NULL,
	IS_DELIVERY_AVAILABLE BOOLEAN NULL,
	REGISTRATION_DATE DATE DEFAULT NOW(),
	ROLE_ID SMALLINT NOT NULL REFERENCES MARKET_SCAN.ROLE(ID),
	CITY_ID INTEGER NOT NULL REFERENCES MARKET_SCAN.CITY(ID)
	DEAL_ACCOUNT__ID INTEGER NOT NULL REFERENCES MARKET_SCAN.DEAL_ACCOUNT(ID)
);

CREATE TABLE MARKET_SCAN.SELLER_REVIEW (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	RESPECTFUL BOOLEAN NOT NULL,
	WAS_QUALITY_OK BOOLEAN NOT NULL,
	WAS_QUANTITY_OK BOOLEAN NOT NULL,
	IS_RECOMMENDED BOOLEAN NOT NULL DEFAULT TRUE,
	OVERALL_RATING SMALLINT NOT NULL,
	COMMENT VARCHAR(500) NULL,
	SELLER_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.PERSON(ID),
	REVIEWER_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.PERSON(ID)
);

-- A JOB WOULD REMOVE ITEMS FROM THIS TABLE ON A REGULAR PERIOD SUBJECT TO DEAL LIFE SPAN, 
-- WHEN A DEAL WILL BE REMOVED IT WILL BE LOGGED FOR AUDIT
CREATE TABLE MARKET_SCAN.OFFERS (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	SELLER_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.PERSON(ID),
	CITY_BRAND_PRODUCT_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.CITY_BRAND_PRODUCT(ID),
	PRICE DECIMAL(12,2) NOT NULL,
	IS_DEAL BOOLEAN NOT NULL DEFAULT FALSE,
	PUBLISHED_DATE DATE NOT NULL
);

CREATE TABLE MARKET_SCAN.DEAL_HISTORY (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	SELLER_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.PERSON(ID),
	CITY_BRAND_PRODUCT_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.CITY_BRAND_PRODUCT(ID),
	DEAL_PUBLISHED DATE NOT NULL,
	DEAL_REMOVED DATE NOT NULL,
	DEAL_VIEWED_COUNT INTEGER NOT NULL,
	LOWEST_PRICE DECIMAL(12,2) NOT NULL,
	DEAL_PRICE DECIMAL(12,2) NOT NULL
);


CREATE TABLE MARKET_SCAN.SEARCH_HISTORY (
	ID BIGSERIAL PRIMARY KEY NOT NULL,
	PERSON_ID BIGINTL NOT NULL REFERENCES MARKET_SCAN.PERSON(ID),
	CITY_BRAND_PRODUCT_ID BIGINT NOT NULL REFERENCES MARKET_SCAN.CITY_BRAND_PRODUCT(ID),
	ITEM_OPENED BOOLEAN NOT NULL,
	SEARCH_DATE TIMESTAMP NOT NULL
);